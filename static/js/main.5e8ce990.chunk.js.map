{"version":3,"sources":["Pie.js","Map.js","list.js","mds.js","Select.js","Bar.js","Matrix.js","App.js","index.js"],"names":["PieDraw","Pie","props","state","data","city","id","style","width","height","dataset","console","log","d3","selectAll","remove","radius","i","undefined","str1","j","str2","children","push","color","length","root","sum","d","value","sort","a","b","size","Math","PI","partition","each","current","svg","append","attr","g","arc","startAngle","x0","endAngle","x1","padAngle","min","padRadius","innerRadius","y0","outerRadius","max","y1","path","descendants","slice","join","depth","parent","name","arcVisible","filter","on","clicked","format","text","ancestors","map","reverse","label","datum","event","p","target","t","transition","duration","tween","this","getAttribute","attrTween","labelVisible","x","y","labelTransform","node","drawChart","bind","Component","MapDraw","Map","list","className","float","total","document","getElementById","removeAttribute","mapData","c","str","f","h","setState","BMap","window","centerAndZoom","Point","enableScrollWheelZoom","geoCoordMap","linear","domain","range","convertData","res","dataItem","fromCoord","toCoord","fromName","toName","coords","series","forEach","item","type","zlevel","effect","show","period","trailLength","symbol","symbolSize","lineStyle","normal","opacity","curveness","coordinateSystem","rippleEffect","brushType","position","formatter","params","val","itemStyle","concat","option","backgroundColor","tooltip","trigger","legend","orient","top","left","textStyle","selectedMode","geo","emphasis","roam","areaColor","borderColor","echarts","init","setOption","MapData","List","colorFlag","xmlns","index","cx","cy","r","fill","strokeWidth","stroke","onClick","fontSize","fontWeight","MdsGetIndex","d1","d2","Mds","padding","minX","maxX","minY","maxY","xScale","nice","yScale","circle","enter","$","mouseover","e","pageX","pageY","html","border","MdsDraw","Select","data1","data2","overflowY","cellPadding","cellSpacing","marginLeft","fontFamily","textAlign","background","Object","keys","getJSON","filedata","cities","Bar","Rural","Urban","Gov","Fix","In","R","U","G","F","I","dom","myChart","emphasisStyle","barBorderWidth","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","brush","toolbox","xAxisIndex","feature","magicType","dataView","xAxis","axisLine","onZero","splitLine","splitArea","axisLabel","interval","fontweight","rotate","yAxis","inverse","boundaryGap","grid","stack","Matrix","colorScale","left_margin","clientWidth","clientHeight","rect_width","rect_height","rect_width_true","rect_row","v1","v2","rect_row_all","rect_col_all","value_row_all","v","value_col_all","JSON","parse","stringify","v_max","valueScale","text_col","text_row","writing-mode","ajax","url","dataType","success","all_value","depart","v_min","scale","App","borderWidth","marginTop","marginRight","borderRightColor","borderBottomColor","borderLeftColor","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5e8ce990.chunk.js","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\nimport './style.css';\r\nimport $ from 'jquery';\r\nimport * as d3 from 'd3';\r\nexport var PieDraw = () => void 0;\r\n\r\n\r\nclass Pie extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data:[],\r\n            city:[]\r\n        };\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div id={'PieSvg'} style={{width:'100%',height:'315px'}}>            \r\n            </div>\r\n        )\r\n    }\r\n   \r\n    drawChart(dataset,city){\r\n   \r\n        console.log(dataset,city);\r\n        d3.select('#PieSvg')\r\n            .selectAll('svg')\r\n            .remove()\r\n            \r\n            \r\n        let width = 224;\r\n        let radius = width / 6;\r\n        let height=102; \r\n        // let svg = d3\r\n        //     .select('#PieSvg')\r\n        //     .append('svg')\r\n        //     .attr('width', '100%')\r\n        //     .attr('height', '282px');\r\n        let data;\r\n        if(city===undefined)\r\n            data=null;\r\n        else\r\n            data= {\"name\":city,\"children\":[]};\r\n        console.log(\"data\",data);\r\n        for(let i in dataset){\r\n            let str1={\"name\":i,\"children\":[]}\r\n            for(let j in dataset[i]){\r\n                let str2={\"name\":j,\"value\":dataset[i][j]}\r\n                str1.children.push(str2);\r\n            }\r\n            data.children.push(str1);\r\n        }\r\n        console.log(data);\r\n        \r\n        let partition = data => {\r\n            const root = d3.hierarchy(data)\r\n                .sum(d => d.value)\r\n                .sort((a, b) => b.value - a.value);\r\n            return d3.partition()\r\n                .size([2 * Math.PI, root.height + 1])\r\n              (root);\r\n          };\r\n\r\n        let color = d3.scaleOrdinal(d3.quantize(d3.interpolateCividis, 7));\r\n        console.log(data.children.length);\r\n        let root = partition(data);\r\n        // console.log(root);\r\n        root.each(d => d.current = d);\r\n\r\n        const svg = d3.select('#PieSvg')\r\n            .append('svg')\r\n            .attr(\"viewBox\", [0, 0, width, width])\r\n            .attr('width', '100%')\r\n            .attr('height', '315px')\r\n            .style(\"font\", \"10px sans-serif\");\r\n\r\n        const g = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${width / 2},${width / 2})`);\r\n\r\n        let arc = d3.arc()\r\n        .startAngle(d => d.x0)\r\n        .endAngle(d => d.x1)\r\n        .padAngle(d => Math.min((d.x1 - d.x0) / 2, 0.005))\r\n        .padRadius(radius * 1.5)\r\n        .innerRadius(d => d.y0 * radius)\r\n        .outerRadius(d => Math.max(d.y0 * radius, d.y1 * radius - 1));\r\n        const path = g.append(\"g\")\r\n            .selectAll(\"path\")\r\n            .data(root.descendants().slice(1))\r\n            .join(\"path\")\r\n            .attr(\"fill\", d => { while (d.depth > 1) d = d.parent; return color(d.data.name); })\r\n            .attr(\"fill-opacity\", d => arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0)\r\n            .attr(\"d\", d => arc(d.current));\r\n        console.log(root.descendants().slice(1))\r\n\r\n        path.filter(d => d.children)\r\n            .style(\"cursor\", \"pointer\")\r\n            .on(\"click\", clicked);\r\n\r\n        let format = d3.format(\",d\")\r\n        path.append(\"title\")\r\n            .text(d => `${d.ancestors().map(d => d.data.name).reverse().join(\"\\n\")}\\n${format(d.value)}`);\r\n\r\n        const label = g.append(\"g\")\r\n            .attr(\"pointer-events\", \"none\")\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .style(\"user-select\", \"none\")\r\n            .selectAll(\"text\")\r\n            .data(root.descendants().slice(1))\r\n            // .join(\"text\")\r\n            // .attr(\"dy\", \"0.35em\")\r\n            // .attr(\"fill-opacity\", d => +labelVisible(d.current))\r\n            // .attr(\"transform\", d => labelTransform(d.current))\r\n            // .text(d => d.data.name);\r\n\r\n        \r\n        const parent = g.append(\"circle\")\r\n            .datum(root)\r\n            .attr(\"r\", radius)\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"pointer-events\", \"all\")\r\n            .on(\"click\", clicked);\r\n\r\n        function clicked(event, p) {\r\n            parent.datum(p.parent || root);\r\n\r\n            root.each(d => d.target = {\r\n            x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n            x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n            y0: Math.max(0, d.y0 - p.depth),\r\n            y1: Math.max(0, d.y1 - p.depth)\r\n            });\r\n\r\n            const t = g.transition().duration(750);\r\n\r\n            // Transition the data on all arcs, even the ones that aren’t visible,\r\n            // so that if this transition is interrupted, entering arcs will start\r\n            // the next transition from the desired position.\r\n            path.transition(t)\r\n                .tween(\"data\", d => {\r\n                const i = d3.interpolate(d.current, d.target);\r\n                return t => d.current = i(t);\r\n                })\r\n            .filter(function(d) {\r\n                return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\r\n            })\r\n                .attr(\"fill-opacity\", d => arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0)\r\n                .attrTween(\"d\", d => () => arc(d.current));\r\n\r\n            label.filter(function(d) {\r\n                return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\r\n            }).transition(t)\r\n                .attr(\"fill-opacity\", d => +labelVisible(d.target))\r\n                .attrTween(\"transform\", d => () => labelTransform(d.current));\r\n        }\r\n        \r\n        function arcVisible(d) {\r\n            return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\r\n        }\r\n\r\n        function labelVisible(d) {\r\n            return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.03;\r\n        }\r\n\r\n        function labelTransform(d) {\r\n            const x = (d.x0 + d.x1) / 2 * 180 / Math.PI;\r\n            const y = (d.y0 + d.y1) / 2 * radius;\r\n            return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\r\n        }\r\n\r\n        return svg.node();\r\n    }\r\n \r\n    componentDidMount() {\r\n        PieDraw=this.drawChart.bind(this);\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Pie;","import React, {\r\n    Component\r\n} from 'react';\r\nimport './style.css';\r\nimport $ from 'jquery';\r\nimport * as d3 from 'd3';\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/map/js/world.js';\r\nimport 'echarts/map/js/china.js';\r\nimport 'echarts/extension/bmap/bmap';\r\nimport { PieDraw } from './Pie';\r\nexport var MapDraw = () => void 0;\r\n\r\nclass Map extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data:[],\r\n            list:[],\r\n            min:0,\r\n            max:0\r\n        };\r\n    }\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div className = {\"dataMapDiv\"} id ={\"allmap\"} style={{width:'100%',height:\"470px\",float:'right'}}></div>\r\n        )\r\n        \r\n    }\r\n\r\n    MapDraw(d,city,total){\r\n        document.getElementById('allmap').removeAttribute('_echarts_instance_');\r\n        let min=1000000;\r\n        let max=-1;\r\n        let mapData = [];\r\n            // console.log(d);\r\n        for(let i in d){\r\n            // console.log(d[i]);\r\n            for(let j in d[i]){\r\n                // console.log(j)\r\n                let t = d[i][j][total];\r\n                if(d[i][j][total]===0)\r\n                    t=0;\r\n                let c = j;\r\n                let str = [{name:city},{name:c,value:t}];\r\n                // console.log(str);\r\n                let f=0;\r\n                for(let h=0;h<mapData.length;h++){\r\n                    if(mapData[h][1].name===c){\r\n                        mapData[h][1].value+=t;\r\n                        if(max<mapData[h][1].value)\r\n                            max=mapData[h][1].value;\r\n                        if(min>mapData[h][1].value)\r\n                            min=mapData[h][1].value\r\n                        f=1;\r\n                        break;\r\n                    }\r\n                                                    \r\n                }\r\n                if(f!==1)\r\n                    mapData.push(str);\r\n            }\r\n        }\r\n        \r\n        // console.log(mapData);\r\n        this.setState({\r\n            data:mapData\r\n        })\r\n        // console.log(d,city,total);\r\n        var planePath = 'arrow';\r\n        // var planePath = 'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z'\r\n        // console.log(min,max)\r\n        var BMap = window.BMap;\r\n        var map = new window.BMap.Map(\"allmap\"); // 创建Map实例\r\n        map.centerAndZoom(new BMap.Point(116.404, 39.915), 11); // 初始化地图,设置中心点坐标和地图级别\r\n        // map.addControl(new BMap.MapTypeControl()); //添加地图类型控件\r\n        // map.setCurrentCity(\"北京\"); // 设置地图显示的城市 此项是必须设置的\r\n        map.enableScrollWheelZoom();\r\n\r\n        var geoCoordMap = {\r\n            '北京':[116.46,39.92],\r\n            '浙江':[120.19,30.26],\r\n            '广东':[113.23,23.16],\r\n            '贵州':[106.71,26.57],\r\n            '陕西':[108.95,34.27],\r\n            '山西':[112.53,37.87],\r\n            '天津':[117.2,39.13],\r\n            '湖北':[114.31,30.52],\r\n            '湖南':[113,28.21],\r\n            '河北':[114.48,38.03],\r\n            '河南':[113.65,34.76],\r\n            '安徽':[117.27,31.86],\r\n            '内蒙古':[111.65,40.82],\r\n            '新疆':[87.68,43.77],\r\n            '广西':[108.33,22.84],\r\n            '云南':[102.73,25.04],\r\n            '福建':[119.3,26.08],\r\n            '黑龙江':[126.63,45.75],\r\n            '辽宁':[123.38,41.8],\r\n            '吉林':[125.35,43.88],\r\n            '山东':[117,36.65],\r\n            '海南':[110.35,20.02],\r\n            '上海':[121.48,31.22],\r\n            '江苏':[120.62,31.32],\r\n            '江西':[115.89,28.68],\r\n            '重庆':[106.54,29.59],\r\n            '四川':[104.06,30.67],\r\n            '甘肃':[103.73,36.03],\r\n            '宁夏':[106.27,38.47],\r\n            '青海':[101.74,36.56],\r\n           }\r\n         let linear = d3.scaleLinear().domain([min, max]).range([5, 16]);\r\n\r\n         var convertData = function (data) {\r\n            var res = [];\r\n            for (var i = 0; i < data.length; i++) {\r\n                var dataItem = data[i];\r\n                var fromCoord = geoCoordMap[dataItem[0].name];  // 出发地的经纬度\r\n                var toCoord = geoCoordMap[dataItem[1].name];    // 目的地的经纬度\r\n                if (fromCoord && toCoord) {\r\n                    res.push({\r\n                        fromName: dataItem[0].name,\r\n                        toName: dataItem[1].name,\r\n                        coords: [fromCoord, toCoord],\r\n                        'value': dataItem[1].value\r\n                    });\r\n                }\r\n            }\r\n            return res;\r\n        };\r\n           \r\n          // 变量7：color：定义了对指定上述城市用SVG画图时线条的颜色\r\n        var color = ['#a6c84c', '#ffa022', '#46bee9'];\r\n        // 变量8：series：图表的系列，开发时动态填充\r\n        var series = [];\r\n        // 对我们上面定义的空图表系列series进行数据填充\r\n        \r\n        [[city, mapData]].forEach(function (item, i) {\r\n            // console.log(item);\r\n            series.push(\r\n\r\n                // {\r\n                //     // 系列名称，用于tooltip的显示\r\n                //     name: item[0],\r\n                //     type: 'lines',\r\n                //     zlevel: 1, // 用于 Canvas 分层，不同zlevel值的图形会放置在不同的 Canvas 中\r\n                //     // effect出发到目的地 的白色尾巴线条\r\n                //     // 线特效的配置\r\n                //     effect: {\r\n                //         show: true,\r\n                //         period: 6, // 特效动画的时间，单位为 s\r\n                //         trailLength: 0.1, // 特效尾迹的长度。取从 0 到 1 的值，数值越大尾迹越长\r\n                //         color: '#46bee9', // 移动箭头颜色\r\n                //         symbol: planePath,\r\n                //         symbolSize: 6 // 特效标记的大小\r\n                //     },\r\n                //     // lineStyle出发到目的地 的线条颜色\r\n                //     lineStyle: {\r\n                //         normal: {\r\n                //             color: color[i],\r\n                //             width: 0,\r\n                //             curveness: 0.2 //幅度\r\n                //         }\r\n                //     },\r\n                //     data: convertData(item[1]) //开始到结束数据\r\n                // }, {\r\n                //     //出发地信息\r\n                //     name: item[0],\r\n                //     type: 'lines',\r\n                //     zlevel: 2,\r\n                //     effect: {\r\n                //         show: true,\r\n                //         period: 6,\r\n                //         trailLength: 0,\r\n                //         symbol: planePath,\r\n                //         symbolSize: function(val) {\r\n                //             console.log(val)\r\n                //             return linear(val[2]);\r\n                //         }\r\n                //     },\r\n                //     lineStyle: {\r\n                //         normal: {\r\n                //             color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                //                 offset: 0,\r\n                //                 color: '#FFFFA8' // 出发\r\n                //             }, {\r\n                //                 offset: 1,\r\n                //                 color: '#58B3CC ' // 结束 颜色\r\n                //             }], false),\r\n                //             width: 1.5,\r\n                //             opacity: 0.4,\r\n                //             curveness: 0.2\r\n                //         }\r\n                //     },\r\n                //     data: convertData(item[1])\r\n                // }, {\r\n                //     // 目的地信息\r\n                //     name: item[0],\r\n                //     type: 'effectScatter',\r\n                //     coordinateSystem: 'geo',\r\n                //     zlevel: 2,\r\n                //     rippleEffect: {\r\n                //         brushType: 'stroke'\r\n                //     },\r\n                //     label: {\r\n                //         normal: {\r\n                //             show: true,\r\n                //             position: 'right',\r\n                //             formatter: '{b}'\r\n                //         }\r\n                //     },\r\n                //     // effect: {\r\n                //     //     // show: true,\r\n                //     //     // period: 6,\r\n                //     //     // trailLength: 0,\r\n                //     //     // symbol: planePath,\r\n                //     //     symbolSize: function(val) {\r\n                //     //         // console.log(val)\r\n                //     //         return linear(val[2]);\r\n                //     //     }\r\n                //     // },\r\n                //     symbolSize: function(val) {\r\n                //         return linear(val[2]);\r\n                //     },\r\n                //     itemStyle: {\r\n                //         normal: {\r\n                //             color: color[i],\r\n                //             // size:function(val) {\r\n                //             //             // console.log(val)\r\n                //             //             return linear(val[2]);\r\n                //             //         }\r\n                //         }\r\n                //     },\r\n                //     data: item[1].map(function(dataItem) {\r\n                //         return {\r\n                //             name: dataItem[1].name,\r\n                //             value: geoCoordMap[dataItem[1].name].concat([dataItem[1].value])\r\n                //         };\r\n                //     })\r\n    \r\n        //     {\r\n        //     //涟漪特效类型\r\n        //     type: \"effectScatter\",\r\n        //     //地理坐标系采用bmap里配置的百度地图\r\n        //     coordinateSystem: \"geo\",\r\n        //     //用于 Canvas 分层（相当于z-index），z相比zlevel优先级更低，而且不会创建新的 Canvas,为了使点位于底图（bmap配置的百度地图）之上\r\n        //     zlevel: 2,\r\n        //     //涟漪特效相关配置\r\n        //     // rippleEffect: {\r\n        //     //     //波纹的绘制方式可选 'stroke' 和 'fill'。 相当于丢石头那个涟漪效果，一个类似圆环，一个类似圆饼\r\n        //     //     brushType: \"fill\"\r\n        //     // },\r\n        //     //配置线条样式\r\n        //     label: {\r\n        //         normal: {\r\n        //             show: true,\r\n        //             position: \"right\",\r\n        //             //采用 rich 中定义样式。\r\n        //             formatter: \"{b}\"\r\n        //         }\r\n        //     },\r\n        //     symbolSize: function(val) {\r\n        //         return linear(val[2]);\r\n        //     },\r\n        //     //配置何时显示特效。'render' 绘制完成后显示特效  'emphasis' 高亮（hover）的时候显示特效。\r\n        //     showEffectOn: \"render\",\r\n        //     itemStyle: {\r\n        //         normal: {\r\n        //             color: color[i]\r\n        //         }\r\n        //     },\r\n        //     data: item[1].map(function (dataItem) {\r\n        //             // dataItem ==> [{'name':'北京'}, {'name':'上海','value':95}]\r\n        //             return {\r\n        //                 // dataItem[1] ==> {'name':'上海','value':95}\r\n        //                 'name': dataItem[0].name,\r\n        //                 'value': geoCoordMap[dataItem[0].name].concat(dataItem[0].value)    // [121.4648, 31.2891, 95]\r\n        //             };\r\n        //             // console.log(geoCoordMap[dataItem[1].'name'].concat([dataItem[1].'value']))\r\n        //         })\r\n        // },\r\n            // 第一组：两地之间的动态轨迹\r\n            // {\r\n            //     'name': item[0],   // 系列的名称\r\n            //     // lines：用于带有起点和终点信息的线数据的绘制，主要用于路线可视化\r\n            //     type: 'lines',\r\n            //     zlevel: 1,              // 画布的权重，权重大的在最上面\r\n            //     effect: {\r\n            //         show: true,         // 打开线条特效\r\n            //         period: 6,          // 特效动画时间，单位s\r\n            //         trailLength: 0.7,   // 特效尾迹的长度，值越大越长\r\n            //         color: '#fff',\r\n            //         symbolSize: 3       // 特效标记的大小\r\n            //     },\r\n            //     // 线条的样式\r\n            //     lineStyle: {\r\n            //         normal: {\r\n            //             color: color[i],\r\n            //             width: 0,\r\n            //             curveness: 0.2  // 边的曲度，取值0~1，值越大曲度越大\r\n            //         }\r\n            //     },\r\n            //     data: convertData(item[1])  // 对北上广的数据转换成特定格式\r\n            // },\r\n            // 第二组：两地之间的线条\r\n            {\r\n                name: item[0],\r\n                type: 'lines',\r\n                zlevel: 2,\r\n                effect: {\r\n                    show: true,\r\n                    period: 6,\r\n                    trailLength: 0,\r\n                    symbol: planePath,  // 基于SVG矢量图的特效图形标记，用于绘制小飞机的\r\n                    symbolSize: 5\r\n                },\r\n                lineStyle: {\r\n                    normal: {\r\n                        color: color[i],\r\n                        width: 1,\r\n                        opacity: 0.4,   // 图形透明度\r\n                        curveness: 0.2\r\n                    }\r\n                },\r\n                data: convertData(item[1])\r\n            },\r\n            {\r\n                name: item[0],\r\n                type: 'effectScatter',      // 带有涟漪特效的散点图，起到视觉突出的效果\r\n                coordinateSystem: 'geo',    // 该系列使用的坐标系指定为地理坐标系\r\n                zlevel: 2,\r\n                rippleEffect: {\r\n                    brushType: 'stroke'     // 波纹的绘制方式\r\n                },\r\n                label: {\r\n                    normal: {\r\n                        show: true,\r\n                        position: 'right'   ,  // 地区名称标签显示位置\r\n                        formatter (params){\r\n                            // console.log(params['data']);\r\n                            return params['data'].name\r\n                            // +'\\nco2:'+ params['data'].value[2]\r\n                        }  // 格式化显示标签，b指的是系列的名称\r\n                    }\r\n                },\r\n                symbolSize: function (val) {\r\n                    // val：[121.4648, 31.2891, 95]\r\n                    // console.log(val[2]);\r\n                    return linear(val[2]);    // 目的地涟漪特效的大小\r\n                },\r\n                itemStyle: {\r\n                    normal: {\r\n                        color: color[i]\r\n                    }\r\n                },\r\n                // 解析：item[1] ==> BJData：[[{'name':'北京'}, {'name':'上海','value':95}],...]\r\n                data: item[1].map(function (dataItem) {\r\n                    // dataItem ==> [{'name':'北京'}, {'name':'上海','value':95}]\r\n                    // console.log(dataItem);\r\n                    return {\r\n                        // dataItem[1] ==> {'name':'上海','value':95}\r\n                        'name': dataItem[1].name,\r\n                        'value': geoCoordMap[dataItem[1].name].concat(dataItem[1].value)    // [121.4648, 31.2891, 95]\r\n                    };\r\n                    // console.log(geoCoordMap[dataItem[1].'name'].concat([dataItem[1].'value']))\r\n                })\r\n            }\r\n            );\r\n        });\r\n        // 变量9：option：指定图表的配置项和数据\r\n        var option = {\r\n            // Dom背景颜色\r\n            backgroundColor: '#8799a3',\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter (params){\r\n                    console.log(params['data']);\r\n                    return params['data'].name+'\\nco2:'+ params['data'].value[2]\r\n                    \r\n                }\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                top: 'bottom',\r\n                left: 'right',\r\n                data: ['node1', 'node2', 'node3'],\r\n                textStyle: {\r\n                    color: '#021019'\r\n                },\r\n                selectedMode: 'single'  // 图例选择的模式：single和multiple分别对应单选和多选\r\n            },\r\n            // geo：地理坐标系组件\r\n            geo: {\r\n                map: 'china',\r\n                label: {\r\n                    emphasis: {\r\n                        // 鼠标触发显示地区名称\r\n                        show: true\r\n                    }\r\n                },\r\n                roam: true,\r\n                itemStyle: {\r\n                    normal: {\r\n                        // 正常时地区的颜色\r\n                        areaColor: '#323c48',\r\n                        borderColor: '#404a59'\r\n                    },\r\n                    emphasis: {\r\n                        // 鼠标经过时地区的颜色\r\n                        areaColor: '#c99979'\r\n                    }\r\n                }\r\n            },\r\n            series: series\t// 调用上面已经填充好的series\r\n        };\r\n\r\n\r\n        // 5. 使用指定的配置项和数据显示图表\r\n            var myChart = echarts.init(document.getElementById('allmap'));\r\n            myChart.setOption(option,true);\r\n    }\r\n \r\n    componentDidMount() {\r\n        MapDraw = this.MapDraw.bind(this);\r\n    }\r\n    \r\n        \r\n    \r\n}\r\n\r\n\r\n\r\n\r\nexport default Map;","import React, { Component } from 'react'\r\nimport $ from 'jquery';\r\nimport { MapDraw } from './Map';\r\nexport var MapData = () => void 0;\r\n\r\nexport default class List extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            city:'',\r\n            data: [],\r\n            list:[\r\n                \"Agriculture\",\r\n                \"Coal mining\",\r\n                \"Petroleum and gas\",\r\n                \"Metal mining\",\r\n                \"Nonmetal mining\",\r\n                \"Food processing and tobaccos\",\r\n                \"Textile\",\r\n                \"Clothing, leather, fur, etc.\",\r\n                \"Wood processing and furnishing\",\r\n                \"Paper making, printing, stationery, etc.\",\r\n                \"Petroleum refining, coking, etc.\",\r\n                \"Chemical industry\",\r\n                \"Nonmetal products\",\r\n                \"Metallurgy\",\r\n                \"Metal products\",\r\n                \"General and specialist machinery\",\r\n                \"Transport equipment\",\r\n                \"Electrical equipment\",\r\n                \"Electronic equipment\",\r\n                \"Instrument and meter\",\r\n                \"Other manufacturing\",\r\n                \"Electricity and hot water production and supply\",\r\n                \"Gas and water production and supply\",\r\n                \"Construction\",\r\n                \"Transport and storage\",\r\n                \"Wholesale and retailing\",\r\n                \"Hotel and restaurant\",\r\n                \"Leasing and commercial services\",\r\n                \"Scientific research\",\r\n                \"Other services\",\r\n                \"total\"\r\n              ],\r\n            colorFlag:30\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <svg width={'100%'} height={'470px'} xmlns={`http://www.w3.org/2000/svg`}>\r\n            {\r\n                this.state.list.map( (item, index) => \r\n                    <g>\r\n                        <circle key={index}\r\n                            id={'circle'+index}\r\n                            xmlns={`http://www.w3.org/2000/svg`}\r\n                            cx={10} \r\n                            cy={12+index*15} r={7}\r\n                            style={{\r\n                                position:'absolute',\r\n                                opacity:0.8,\r\n                                fill:this.state.colorFlag === -1 ? 'gray' : (this.state.colorFlag === index ? 'OrangeRed' : 'gray'),\r\n                                // fill:'gray',\r\n                                strokeWidth: 1,\r\n                                stroke:'#AEEEEE'\r\n                            }}\r\n                            onClick = {()=>{\r\n                                console.log(index);\r\n                                if(index !== this.state.index)\r\n                                    this.setState({\r\n                                        colorFlag:index\r\n                                    })\r\n                                else{\r\n                                    this.setState({\r\n                                        colorFlag:-1\r\n                                    })\r\n                                }\r\n                                console.log(item);\r\n                                // let d=[];\r\n                                MapDraw(this.state.data,this.state.city,item);\r\n                            }}\r\n                        >\r\n                        </circle>\r\n                        <text style={{position:'absolute',fontSize:13,fontWeight:500}} \r\n                                x={20} y={15+index*15}>\r\n                            {item}\r\n                        </text>\r\n                    </g>\r\n                )\r\n            }    \r\n            </svg>\r\n        )\r\n    }\r\n\r\n    MapData(data,city){\r\n        this.setState({\r\n            data:data,\r\n            city:city\r\n        })\r\n        console.log(this.state.data);\r\n        MapDraw(data,city,'total');\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        MapData= this.MapData.bind(this);\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport * as d3 from \"d3\";\r\nimport { event } from 'd3-selection'; \r\nimport './style.css';\r\nimport { PieDraw } from './Pie';\r\nimport { MapData } from './list';\r\n\r\nimport { format, ZoomTransform } from 'd3';\r\nexport var MdsGetIndex = (index, city,d1,d2) => void 0\r\n\r\n\r\nexport default class Mds extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data:[[ 235.94675098,-7.32438728],\r\n            [ 156.28125955,21.95351181],\r\n            [-396.501585, 207.85550013],\r\n            [-179.5256502, 10.15708264],\r\n            [-382.25596338 ,-128.33436397],\r\n            [-158.69348615,51.61353852],\r\n            [  83.12016742,-1.76058079],\r\n            [  54.7435723,-14.44859157],\r\n            [ 127.23615231,11.63141364],\r\n            [-394.39164535 , -37.80837921],\r\n            [ -75.31151535,  -58.72540966],\r\n            [ -10.72151616,  -25.26853321],\r\n            [  82.01923203 , -16.28087852],\r\n            [ 167.21055316, 8.32366924],\r\n            [-551.40018568,-8.54355424],\r\n            [-203.05360916 , -19.16337169],\r\n            [ -29.29703282,19.7031857 ],\r\n            [  64.71505849,13.25954081],\r\n            [-196.3588594,-58.26711498],\r\n            [ 135.76039065, 5.56699662],\r\n            [ 286.84008042,-6.40014563],\r\n            [ 178.27929818,21.02370336],\r\n            [  52.29628252,57.59283881],\r\n            [  93.65680544  ,-18.83129722],\r\n            [ 127.78636905,23.36753291],\r\n            [  67.17758648,-9.58205291],\r\n            [ 164.25074342,-6.68656806],\r\n            [ 283.70150508, 3.23743122],\r\n            [ 161.93454117 , -26.74309865],\r\n            [  54.55469998 , -11.11761781]]\r\n            // data:[[-1.21470744e+02,  1.52642580e+01],\r\n            // [-8.35179489e+01, -1.85406043e+01],\r\n            // [ 1.48257158e+02, -2.13355571e+02],\r\n            // [ 9.85263564e+01, -2.04286670e+01],\r\n            // [ 2.54386733e+02,  9.94877422e+01],\r\n            // [ 5.85669411e+01, -4.91767565e+01],\r\n            // [-4.80205679e+01,  7.33114671e+00],\r\n            // [-3.71438003e+01,  2.32390829e+01],\r\n            // [-8.11046851e+01,  1.32596773e-01],\r\n            // [ 2.48950003e+02,  3.54675687e+00],\r\n            // [ 7.05709325e+01,  4.50756721e+01],\r\n            // [ 2.67490201e+01,  1.56271429e+01],\r\n            // [-3.02548043e+01,  1.36209531e+01],\r\n            // [-8.39868785e+01, -5.77600071e+00],\r\n            // [ 2.64639975e+02,  5.33835528e+00],\r\n            // [ 1.11088760e+02,  1.17914646e+01],\r\n            // [-1.07590104e+01, -7.67832561e+00],\r\n            // [-5.04483885e+01, -2.78995809e+00],\r\n            // [ 1.20248142e+02,  4.88124752e+01],\r\n            // [-7.54581487e+01,  9.90130114e-01],\r\n            // [-1.39880743e+02,  1.09513219e+01],\r\n            // [-1.09619392e+02, -7.76511253e+00],\r\n            // [-7.59996838e+01, -3.41317314e+01],\r\n            // [-3.91610138e+01 , 1.86515384e+01],\r\n            // [-7.81156936e+01 ,-1.51922533e+01],\r\n            // [-3.65902437e+01 , 1.40765340e+01],\r\n            // [-7.27267052e+01 , 5.20739352e+00],\r\n            // [-1.44742273e+02 , 3.77788880e+00],\r\n            // [-5.90130132e+01 , 2.03275232e+01],\r\n            // [-2.39702842e+01 , 1.15850039e+01]]\r\n            // data:[[ -16.67479048, -122.91614666],\r\n            // [  20.2664839  , -85.01455192],\r\n            // [ 212.75641005 , 150.24380766],\r\n            // [  26.32667983 , 101.4702759 ],\r\n            // [-106.46244709 , 253.09176744],\r\n            // [  52.76272324 ,  58.76917753],\r\n            // [  -0.86648056 , -47.16753297],\r\n            // [ -37.32972168 , -36.81876854],\r\n            // [ -15.53649229 , -86.97362128],\r\n            // [ -17.96128966 , 249.3372204 ],\r\n            // [ -47.59748708 ,  69.98693323],\r\n            // [ -18.1444601  ,  27.77256459],\r\n            // [  -6.09464084 , -29.10485183],\r\n            // [   7.08807824 , -85.16563186],\r\n            // [   6.87845382 , 268.03108341],\r\n            // [ -12.70801687 , 112.93094454],\r\n            // [  22.14600153 ,  -9.11976972],\r\n            // [  10.55703546 , -49.98332988],\r\n            // [ -58.65973302 , 120.07965418],\r\n            // [   1.55964888 , -76.4993318 ],\r\n            // [  -9.34277303 ,-141.34204873],\r\n            // [  13.83197304 ,-111.15043184],\r\n            // [  44.85611551 , -75.23894182],\r\n            // [ -22.38526056 , -40.33580178],\r\n            // [  17.59566033 , -78.23051008],\r\n            // [ -19.46651479 , -35.68606609],\r\n            // [  -7.07506755 , -72.96975505],\r\n            // [  -0.36140123 ,-146.2141927 ],\r\n            // [ -25.10782125 , -60.05095795],\r\n            // [ -14.85086576  ,-21.73118639]]\r\n            //pca\r\n            // data:[[-1.21470744e+02, -1.52642580e+01],\r\n            // [-8.35179489e+01 , 1.85406043e+01],\r\n            // [ 1.48257158e+02 , 2.13355571e+02],\r\n            // [ 9.85263564e+01 , 2.04286670e+01],\r\n            // [ 2.54386733e+02 ,-9.94877422e+01],\r\n            // [ 5.85669411e+01 , 4.91767565e+01],\r\n            // [-4.80205679e+01 ,-7.33114671e+00],\r\n            // [-3.71438003e+01 ,-2.32390829e+01],\r\n            // [-8.11046851e+01 ,-1.32596773e-01],\r\n            // [ 2.48950003e+02 ,-3.54675687e+00],\r\n            // [ 7.05709325e+01 ,-4.50756721e+01],\r\n            // [ 2.67490201e+01 ,-1.56271429e+01],\r\n            // [-3.02548043e+01 ,-1.36209531e+01],\r\n            // [-8.39868785e+01 , 5.77600071e+00],\r\n            // [ 2.64639975e+02 ,-5.33835528e+00],\r\n            // [ 1.11088760e+02 ,-1.17914646e+01],\r\n            // [-1.07590104e+01 , 7.67832561e+00],\r\n            // [-5.04483885e+01 , 2.78995809e+00],\r\n            // [ 1.20248142e+02 ,-4.88124752e+01],\r\n            // [-7.54581487e+01 ,-9.90130114e-01],\r\n            // [-1.39880743e+02 ,-1.09513219e+01],\r\n            // [-1.09619392e+02 , 7.76511253e+00],\r\n            // [-7.59996838e+01 , 3.41317314e+01],\r\n            // [-3.91610138e+01 ,-1.86515384e+01],\r\n            // [-7.81156936e+01 , 1.51922533e+01],\r\n            // [-3.65902437e+01 ,-1.40765340e+01],\r\n            // [-7.27267052e+01 ,-5.20739352e+00],\r\n            // [-1.44742273e+02 ,-3.77788880e+00],\r\n            // [-5.90130132e+01 ,-2.03275232e+01],\r\n            // [-2.39702842e+01 ,-1.15850039e+01]]\r\n       }\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state.data);\r\n        return (\r\n            <div id='svg' style={{height:'238px'}}>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    MdsDraw (index, city, d1, d2) {\r\n        let c = this.state.city;\r\n        d3.select('#svg')\r\n            .selectAll('svg')\r\n            .remove();\r\n       \r\n        var width = 460;    // 可视区域宽度\r\n        var height = 238;   // 可视区域高度\r\n        var padding = {top: 10, right: 5, bottom:5, left:5};\r\n\r\n        var svg = d3.select(\"#svg\")\r\n                .append(\"svg\")\r\n                .attr(\"width\", width)\r\n                .attr(\"height\", height)\r\n        // svg.call(d3.zoom().scaleExtent([0.5,5])).on('zoom', zoomed);\r\n        // function zoomed({transform}){\r\n        //     svg.select(\"g\").attr(\"transfrom\", transform);\r\n        //     console.log(\"111\")\r\n        // }\r\n        \r\n        let dataset = this.state.data;\r\n        let minX=100;\r\n        let maxX=0;\r\n        let minY=100;\r\n        let maxY=0;\r\n        for(let i =0;i<dataset.length;i++){\r\n            if(dataset[i][0]<minX){\r\n                minX=dataset[i][0]\r\n            }\r\n            if(dataset[i][1]<minY){\r\n                minY=dataset[i][1]\r\n            }\r\n            if(dataset[i][0]>maxX){\r\n                maxX=dataset[i][0]\r\n            }\r\n            if(dataset[i][1]>maxY){\r\n                maxY=dataset[i][1]\r\n            }\r\n        }\r\n\r\n       \r\n\r\n        // console.log(minX,minY,maxX,maxY);\r\n        var xScale=d3.scaleLinear()\r\n                .domain([minX,maxX])\r\n                .nice()\r\n\t\t\t\t.range([5,width-padding.left-padding.right]);\r\n \r\n        var yScale=d3.scaleLinear()\r\n                    .domain([minY,maxY])\r\n                    .nice()\r\n                    .range([height-padding.top-padding.bottom,10]);\r\n        \r\n        var tooltip = d3.select(\"#svg\").append(\"div\")\r\n                    .attr(\"class\",\"tooltip\") //用于css设置类样式\r\n                    .attr(\"opacity\",0.0);\r\n\r\n        var circle=svg.selectAll(\"circle\")\r\n                    .data(dataset)\r\n                    .enter()\r\n                    .append(\"circle\")\r\n                    .attr(\"fill\",function (d,i) {\r\n                        if(i===index)\r\n                            return 'OrangeRed';\r\n                        else\r\n                            return 'gray'\r\n                    })\r\n                    .attr('id',function (d,i) {\r\n                        return i;\r\n                    })\r\n                    .attr('opacity',0.7)\r\n                    .attr(\"cx\",function(d){\r\n                        return xScale(d[0]);//设置圆心x坐标\r\n                    })\r\n                    .attr(\"cy\",function(d){\r\n                        \r\n                        // console.log(yScale(d[1]));\r\n                        return yScale(d[1]);\r\n                        //调节y的值  调了好久 \r\n                        //需要与设置的y轴的坐标相对应\r\n                    })\r\n                    .attr(\"r\",4.5);//半径     \r\n                    \r\n\r\n                $(document).mouseover(function (e) {\r\n                    let c=['北京', '天津', '河北', '山西', '内蒙古', '辽宁', '吉林', '黑龙江', '上海', '江苏', '浙江', '安徽', '福建', '江西', '山东', '河南', '湖北', '湖南', '广东', '广西', '海南', '重庆', '四川', '贵州', '云南', '陕西', '甘肃', '青海', '宁夏', '新疆']\r\n\r\n                    circle.on(\"mouseover\",function(d)\r\n                        {\r\n                        var x = e.pageX;\r\n                        var y = e.pageY;\r\n                        tooltip.html(c[d.target.id])\r\n                        // 设置tooltip的位置(left,top 相对于页面的距离) \r\n                            .style(\"left\",(x)+\"px\")\r\n                            .style(\"top\",(y)+\"px\")\r\n                            .style(\"opacity\",1.0);\r\n                        })\r\n                        .on('click',function (d) {\r\n                            PieDraw(d1[\"2012\"][c[d.target.id]],c[d.target.id]);\r\n                            MapData(d2[\"2012\"][c[d.target.id]],c[d.target.id]);\r\n                           \r\n                            svg.selectAll('circle').attr('fill','gray');\r\n                            d3.select(d.target).attr('fill','OrangeRed');\r\n\r\n                            for(let i=0;i<dataset.length;i++){\r\n                                document.getElementById('List'+i).style.border = '2px solid #ccc';\r\n                            }\r\n                            document.getElementById('List'+d.target.id).style.border = '2px solid red';\r\n                        })\r\n                        //--鼠标移出事件\r\n                        .on(\"mouseout\",function(d)\r\n                        {\r\n                            tooltip.style(\"opacity\",0.0);\r\n                    }); \r\n                })\r\n       \r\n\r\n\t\t\t\t\t\t\r\n                    \r\n                        \r\n        \r\n    }\r\n\r\n    componentDidMount () {        \r\n        MdsGetIndex = this.MdsDraw.bind(this);\r\n        \r\n    }\r\n}\r\n","import React, {\r\n    Component\r\n} from 'react';\r\nimport './style.css';\r\nimport $ from 'jquery';\r\nimport * as d3 from 'd3';\r\nimport { PieDraw } from './Pie';\r\nimport { MapData } from './list';\r\nimport { MdsGetIndex } from \"./mds\";\r\nimport { backgroundColor } from 'echarts/lib/theme/dark';\r\nimport { color } from 'echarts/lib/export';\r\n\r\nclass Select extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data1:[],\r\n            data2:[],\r\n            city:[],\r\n            min:0,\r\n            max:0\r\n        };\r\n    }\r\n    \r\n    render() {\r\n        MdsGetIndex(0,'北京',this.state.data1,this.state.data2);\r\n        let linear = d3.scaleLinear().domain([this.state.min, this.state.max]).range([20, 100]);\r\n        let linear1 = d3.scaleLinear().domain([this.state.min, this.state.max]).range([0.7, 1]);\r\n        return (\r\n            <div  style={{height:'100%',width:'100%'}}>\r\n                <div id={\"CityBtn\"} style={{height:'198px',width:'100%',float:'left',overflowY:'scroll'}}>    \r\n                    <table  border={0} cellPadding={0} cellSpacing={0} style={{marginLeft:4}}>   \r\n                    {\r\n                        \r\n                        this.state.city.map((item,index)=>{\r\n                            //\"border:1px solid #ccc;background:#fff;\r\n                            //line-height:37px;color:#999;font-size:14px;text-align:center;font-family:微软雅黑;font-size:16px\"\r\n                            return ( \r\n                                // index>14 ? null:\r\n                                <tr>\r\n                                    <td id={\"List\"+index}\r\n                                        key={index}\r\n                                        style={{\r\n                                            fontSize:20,\r\n                                            fontFamily:'微软雅黑',\r\n                                            width:'510px',\r\n                                            textAlign:'center',\r\n                                            background:`linear-gradient(to right,rgba(70,130,180) 0%, rgba(70,130,180,0) ${\r\n                                                linear(this.state.data1[\"2012\"][Object.keys(this.state.data1[2012])[index]][\"Total Consumption\"][\"Total\"])}%)`,\r\n                                            // background:this.state.indexs[index]===0 ? \r\n                                            //     `linear-gradient(to right,rgba(70,130,180) 0%, rgba(70,130,180,0) ${linear(item.value)}%)`\r\n                                            //     :`linear-gradient(to right,rgba(205,133,63) 0%, rgba(205,133,63,0) ${linear(item.value)}%)`,\r\n                                            border:'2px solid #ccc',\r\n                                            color:'black',\r\n                                            // opacity: linear1(this.state.data[\"2012\"][Object.keys(this.state.data[2012])[index]][\"Total Consumption\"][\"Total\"])\r\n                                        }}\r\n                                        onClick={(e)=>{\r\n                                            for(let i=0;i<this.state.city.length;i++){\r\n                                                document.getElementById('List'+i).style.border = '2px solid #ccc';\r\n                                            }\r\n                                            e.target.style.border = '2px solid red';\r\n                                            PieDraw(this.state.data1[\"2012\"][item],item);\r\n                                            MapData(this.state.data2[\"2012\"][item],item);\r\n                                            MdsGetIndex(index,item,this.state.data1,this.state.data2);\r\n                                        }}\r\n                                       \r\n                                        >\r\n                                        {item}\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n \r\n    componentDidMount() {\r\n        \r\n        $.getJSON(`/data/data.json`, (filedata) => {\r\n            let cities=[];\r\n            let dataset=filedata;\r\n            let min = 10000;\r\n            let max = 0;\r\n            console.log(dataset);\r\n            for(let i=0;i< Object.keys(filedata[2012]).length;i++){\r\n                // cities.push();\r\n                //console.log(dataset[\"2012\"][Object.keys(filedata[2012])[i]]);\r\n                if(min>dataset[\"2012\"][Object.keys(filedata[2012])[i]][\"Total Consumption\"][\"Total\"])\r\n                    min = dataset[\"2012\"][Object.keys(filedata[2012])[i]][\"Total Consumption\"][\"Total\"];\r\n                if(max<dataset[\"2012\"][Object.keys(filedata[2012])[i]][\"Total Consumption\"][\"Total\"])\r\n                    max = dataset[\"2012\"][Object.keys(filedata[2012])[i]][\"Total Consumption\"][\"Total\"];\r\n                cities[i]=Object.keys(filedata[2012])[i];\r\n            }\r\n            // console.log(cities.length);\r\n            // console.log(max,min);\r\n            PieDraw(dataset[\"2012\"]['北京'],'北京');\r\n            \r\n            this.setState({\r\n                city:cities,\r\n                data1:dataset,\r\n                min:min,\r\n                max:max\r\n            })\r\n        })\r\n\r\n        $.getJSON(`/data/datajj.json`, (filedata) => {\r\n            let allCity = [];\r\n            let total = 0;\r\n            let dataset=filedata;\r\n            let city=Object.keys(filedata[2012]);\r\n\r\n            // for(let i=0;i< city.length;i++){\r\n            //     for(let j=0; j< list.length;j++){\r\n            //         // console.log()\r\n            //         for(let h=0;h<city.length;h++){\r\n            //             total=0;\r\n            //             for(let m=0; m < list.length; m++){\r\n            //                 total += parseFloat(dataset[\"2012\"][city[i]][list[j]][city[h]][list[m]]);  \r\n            //             }\r\n            //             dataset[\"2012\"][city[i]][list[j]][city[h]].total=total;\r\n            //         }\r\n            //     }\r\n            //     // list.push(Object.keys(dataset[\"2012\"][Object.keys(filedata[2012])[i]]));\r\n            //     // list[i]=Object.keys(filedata[2012])[i];\r\n            // }\r\n            console.log(dataset);\r\n            // console.log(list);\r\n            // // console.log(max,min);\r\n            MapData(dataset[\"2012\"]['北京'],'北京');\r\n            this.setState({\r\n                data2:dataset\r\n            })\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Select;","import React, { Component } from 'react'\r\nimport echarts from 'echarts/lib/echarts';\r\nimport 'echarts/lib/chart/bar';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport $ from 'jquery';\r\n\r\nexport default class Bar extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        $.getJSON('/data/data消费类型.json', (filedata) => {\r\n            console.log(filedata);\r\n            let d = filedata[2012];\r\n            let city=[];\r\n            let Rural=[];\r\n            let Urban=[];\r\n            let Gov=[];\r\n            let Fix=[];\r\n            let In =[];\r\n            for(let i in d){\r\n                city.push(i);\r\n                let R=0;\r\n                let U=0;\r\n                let G=0;\r\n                let F=0;\r\n                let I=0;\r\n                for(let j in d[i]){\r\n                    // console.log(d[i][j])\r\n                    for(let h in d[i][j]){\r\n                        R+=d[i][j][h]['Rural household consumption'];\r\n                        U+=d[i][j][h]['Urban household consumption'];\r\n                        G+=d[i][j][h]['Government consumption'];\r\n                        F+=d[i][j][h]['Fixed capital formation'];\r\n                        I+=d[i][j][h]['Inventory increase'];\r\n                    }\r\n                }\r\n                Rural.push(R);\r\n                Urban.push(U);\r\n                Gov.push(G);\r\n                Fix.push(F);\r\n                In.push(I);\r\n\r\n            }\r\n            console.log(city);\r\n            // console.log(Rural,Urban,Gov,Fix,In);\r\n\r\n            var dom = document.getElementById(\"bar\");\r\n            var myChart = echarts.init(dom);\r\n            var app = {};\r\n            let option = null;\r\n            var emphasisStyle = {\r\n                itemStyle: {\r\n                    barBorderWidth: 1,\r\n                    shadowBlur: 10,\r\n                    shadowOffsetX: 0,\r\n                    shadowOffsetY: 0,\r\n                    shadowColor: 'rgba(0,0,0,0.5)'\r\n                }\r\n            };\r\n            \r\n            option = {\r\n                backgroundColor: '#eee',\r\n                legend: {\r\n                    data: ['Rural household consumption', 'Urban household consumption', 'Government consumption', 'Fixed capital formation','Inventory increase'],\r\n                    left: 20,\r\n                    top:22\r\n                },\r\n                brush: {\r\n                    toolbox: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\r\n                    xAxisIndex: 0,\r\n                    \r\n                },\r\n                toolbox: {\r\n                    feature: {\r\n                        magicType: {\r\n                            type: ['stack', 'tiled']\r\n                        },\r\n                        dataView: {}\r\n                    }\r\n                },\r\n                tooltip: {},\r\n                xAxis: {\r\n                    data: city,\r\n                    name: 'city',\r\n                    axisLine: {onZero: true},\r\n                    splitLine: {show: false},\r\n                    splitArea: {show: false},\r\n                    // axisTick: {\r\n                    //     alignWithLabel: true\r\n                    // },\r\n                    axisLabel:{\r\n                        color:\"black\",\r\n                        interval: 0,\r\n                        fontSize:11,\r\n                        fontweight:650,\r\n                        rotate:38\r\n                    },\r\n                },\r\n                yAxis: {\r\n                    inverse: true,\r\n                    splitArea: {show: false},\r\n                    boundaryGap:false\r\n                },\r\n                grid: {\r\n                    left: 100\r\n                },\r\n                // visualMap: {\r\n                //     type: 'continuous',\r\n                //     dimension: 1,\r\n                //     text: ['High', 'Low'],\r\n                //     inverse: true,\r\n                //     itemHeight: 200,\r\n                //     calculable: true,\r\n                //     min: -2,\r\n                //     max: 6,\r\n                //     top: 60,\r\n                //     left: 10,\r\n                //     inRange: {\r\n                //         colorLightness: [0.4, 0.8]\r\n                //     },\r\n                //     outOfRange: {\r\n                //         color: '#bbb'\r\n                //     },\r\n                //     controller: {\r\n                //         inRange: {\r\n                //             color: '#2f4554'\r\n                //         }\r\n                //     }\r\n                // },\r\n                series: [\r\n                    {\r\n                        name: 'Rural household consumption',\r\n                        type: 'bar',\r\n                        stack: 'one',\r\n                        emphasis: emphasisStyle,\r\n                        data: Rural\r\n                    },\r\n                    {\r\n                        name: 'Urban household consumption',\r\n                        type: 'bar',\r\n                        stack: 'one',\r\n                        emphasis: emphasisStyle,\r\n                        data: Urban\r\n                    },\r\n                    {\r\n                        name: 'Government consumption',\r\n                        type: 'bar',\r\n                        stack: 'two',\r\n                        emphasis: emphasisStyle,\r\n                        data:Gov\r\n                    },\r\n                    {\r\n                        name: 'Fixed capital formation',\r\n                        type: 'bar',\r\n                        stack: 'two',\r\n                        emphasis: emphasisStyle,\r\n                        data:Fix\r\n                    },\r\n                    {\r\n                        name: 'Inventory increase',\r\n                        type: 'bar',\r\n                        stack: 'two',\r\n                        emphasis: emphasisStyle,\r\n                        data: In\r\n                    }\r\n                ]\r\n            };\r\n            \r\n            // myChart.on('brushSelected', renderBrushed);\r\n            \r\n            function renderBrushed(params) {\r\n                var brushed = [];\r\n                var brushComponent = params.batch[0];\r\n            \r\n                for (var sIdx = 0; sIdx < brushComponent.selected.length; sIdx++) {\r\n                    var rawIndices = brushComponent.selected[sIdx].dataIndex;\r\n                    brushed.push('[Series ' + sIdx + '] ' + rawIndices.join(', '));\r\n                }\r\n            \r\n                myChart.setOption({\r\n                    title: {\r\n                        backgroundColor: '#333',\r\n                        text: 'SELECTED DATA INDICES: \\n' + brushed.join('\\n'),\r\n                        bottom: 0,\r\n                        right: 0,\r\n                        width: 100,\r\n                        textStyle: {\r\n                            fontSize: 12,\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n            if (option && typeof option === \"object\") {\r\n                myChart.setOption(option, true);\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id='bar' style={{width:'100%',height:'100%'}}>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {\r\n    Component\r\n} from 'react';\r\nimport './style.css';\r\nimport $ from 'jquery';\r\nimport * as d3 from 'd3';\r\n\r\nclass Matrix extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data:[],\r\n            city:[],\r\n        };\r\n    }\r\n    \r\n    render() {\r\n\r\n        var colorScale = d3\r\n        .scaleLinear()\r\n        .domain([0, 1])\r\n        .range([\"rgb(247,216,156)\", \"rgb(210,57,67)\"]);\r\n        let rect_width_max = 45;\r\n        let left_margin =45;\r\n        let width = document.getElementById('MatrixSvg')?document.getElementById('MatrixSvg').clientWidth:0;\r\n        let height = document.getElementById('MatrixSvg')?document.getElementById('MatrixSvg').clientHeight:0;\r\n        let rect_width = (width - 100) / this.state.city.length;\r\n        let rect_height = (height -100) / this.state.city.length;\r\n        let rect_width_true = rect_width < rect_height ? rect_width : rect_height;\r\n        const rect_row = this.state.data.map((v1,i)=>{\r\n            const rect_col = v1.map((v2,j)=>{\r\n                return <rect fill={colorScale(v2)} x={left_margin+j*rect_width_true} y={left_margin+i*rect_width_true} width={rect_width_true} height={rect_width_true}></rect>;\r\n            })\r\n            return rect_col;\r\n        })\r\n        var rect_row_all =[];\r\n        var rect_col_all =[];\r\n        if(this.state.data.length>0){\r\n            let value_row_all = this.state.data.map(v=>d3.sum(v));\r\n            let value_col_all = JSON.parse(JSON.stringify(this.state.data[0]));\r\n            for(let i=1;i<this.state.data.length;i++){\r\n                for(let j=0;j<this.state.data.length;j++){\r\n                    value_col_all[j] += this.state.data[i][j];\r\n                }\r\n            }\r\n            var v_max = d3.max([d3.max(value_col_all),d3.max(value_row_all)]);\r\n            var valueScale = d3.scaleLinear([0, v_max], [0, rect_width_max]);\r\n            rect_row_all = value_row_all.map((v,i)=><rect x={left_margin+this.state.city.length*rect_width_true} y={left_margin+i*rect_width_true} height={rect_width_true} width={valueScale(v)} fill=\"#89D0C2\"></rect>);\r\n            rect_col_all = value_col_all.map((v,i)=><rect x={left_margin+i*rect_width_true} y={left_margin+this.state.city.length*rect_width_true} height={valueScale(v)} width={rect_width_true} fill=\"#F77A82\"></rect>);\r\n        }\r\n        var text_col = [];\r\n        var text_row = [];\r\n        if(this.state.city.length>0){\r\n            text_col = this.state.city.map((v,i)=><text x={2} y={10+left_margin+i*rect_width_true} fontSize={10}>{v}</text>)\r\n            text_row = this.state.city.map((v,i)=><text x={5+left_margin+i*rect_width_true} y={5} fontSize={10} writing-mode=\"tb\">{v}</text>)\r\n        }\r\n        return (\r\n            <div id={'MatrixSvg'} style={{width:'100%',height:'100%'}}>\r\n                <svg style={{width:'100%', height:'100%'}}>\r\n                    {rect_row}\r\n                    {rect_row_all}\r\n                    {rect_col_all}\r\n                    {text_col}\r\n                    {text_row}\r\n                </svg>            \r\n            </div>\r\n        )\r\n    }\r\n\r\n \r\n    componentDidMount() {\r\n        console.log(\"matrix\")\r\n        $.ajax({\r\n            url:'../data/datajj.json',\r\n            type:'GET',\r\n            dataType:'json',\r\n            success:(data)=>{\r\n                console.log(data);\r\n                let city = [];\r\n                for(let i in data){\r\n                    for(let j in data[i]){\r\n                        city.push(j)\r\n                    }\r\n                }\r\n                let d = [];\r\n                let all_value = [];\r\n                for(let i=0;i<city.length;i++){\r\n                    let v =[];\r\n                    for(let j = 0;j<city.length;j++){\r\n                        let value = 0;\r\n                        for(let depart in data['2012'][city[i]]){\r\n                            value+=data['2012'][city[i]][depart][city[j]]['total'];\r\n                        }\r\n                        v.push(Math.log(value));\r\n                        all_value.push(Math.log(value));\r\n                    }\r\n                    d.push(v);\r\n                }\r\n                let v_min = d3.min(all_value);\r\n                let v_max = d3.max(all_value);\r\n                let scale = d3.scaleLinear([v_min,v_max],[0,1]);\r\n                console.log(d)\r\n                for(let i=0;i<d.length;i++){\r\n                    for(let j=0;j<d[i].length;j++){\r\n                        d[i][j]=scale(d[i][j]);\r\n\r\n                    }\r\n                }\r\n\r\n                this.setState({city:city,data:d})\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Matrix;","import './App.css';\nimport './style.css';\nimport Select from './Select';\nimport Map from './Map';\nimport Pie from './Pie';\nimport List from './list';\nimport Bar from './Bar';\nimport Mds from './mds';\nimport Matrix from './Matrix';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{width:\"100%\",height:'100%'}}>\n\n        <div id=\"top\" style={{border:'dashed',borderWidth:2,marginLeft:'1px',\n                            borderColor:'rgba(1,1,1,0.5)'}}>\n            <h1 style={{marginTop:'-3px',fontFamily:'微软雅黑',color:\"DimGrey\"}}>\n              碳排放数据可视系统\n            </h1>\n        </div>\n\n        <div id=\"left\" style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,marginLeft:'1px',marginRight:'1px',\n                            borderRightColor:'rgba(1,1,1,0.5)',borderBottomColor:'rgba(1,1,1,0.5)',borderLeftColor:'rgba(1,1,1,0.5)'}}>\n            <div className=\"panell-heading\"  style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,\n                            borderBottomColor:'rgba(1,1,1,0.5)',width:'98%'}}>\n              <h3 style={{fontFamily:'微软雅黑',color:\"black\"}}>\n                碳排放省份选择\n              </h3>\n            </div>\n            <div  style={{width:'99%',height:'200px',border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,\n                            borderBottomColor:'rgba(1,1,1,0.5)'}}>\n                <Select />\n            </div>\n            <div className=\"panell-heading\"  style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,\n                            borderBottomColor:'rgba(1,1,1,0.5)',width:'98%'}}>\n                <h3 style={{fontFamily:'微软雅黑',color:\"black\"}}>\n                各省产业部门碳排放结构相似性\n                </h3>\n\n            </div>\n            <div style={{height:'247px',width:'455px'}}>\n                <Mds />\n            </div>\n        </div>\n\n        <div id=\"center\" style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,marginLeft:'1px',\n                            borderRightColor:'rgba(1,1,1,0.5)',borderBottomColor:'rgba(1,1,1,0.5)'}}>\n            <div className=\"panell-heading\"  style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,\n                            borderBottomColor:'rgba(1,1,1,0.5)',width:'99%'}}>\n                <h3 style={{fontFamily:'微软雅黑',color:\"black\"}}>\n                碳排放流动地图\n                </h3>\n\n            </div>\n            <div style={{width:'27%',float:'right',border:'none',borderColor:'rgba(0,0,0,0)',borderWidth:2,\n                            borderRightColor:'rgba(1,1,1,0.5)'}}>\n                <List />\n            </div>\n            <div  style={{width:'72%',height:'470px',border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,\n                            borderBottomColor:'rgba(1,1,1,0.5)',float:'left'}}>\n                <Map />\n            </div>              \n        </div>\n\n         <div id=\"rightTop\"  style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,marginRight:'1px',\n                            borderRightColor:'rgba(1,1,1,0.5)',borderBottomColor:'rgba(1,1,1,0.5)'}}>\n            <div className=\"panell-heading\"  style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,\n                            borderBottomColor:'rgba(1,1,1,0.5)',width:'98%',float:'left'}}>\n                <h3 style={{fontFamily:'微软雅黑',color:\"black\"}}>\n                碳排放投入产出\n                </h3>\n\n            </div>\n     \n            <div  style={{width:'99%',height:'100%'}}>\n                 <Matrix/> \n            </div>\n         \n        </div>\n\n        <div id=\"leftBottom\"  style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,marginLeft:'1px',marginRight:'1px',\n                            borderRightColor:'rgba(1,1,1,0.5)',borderBottomColor:'rgba(1,1,1,0.5)',borderLeftColor:'rgba(1,1,1,0.5)'}}>\n            <div className=\"panell-heading\"  style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,\n                            borderBottomColor:'rgba(1,1,1,0.5)',width:'98%'}}>\n                <h3 style={{fontFamily:'微软雅黑',color:\"black\"}}>\n                碳排放生产组成\n                </h3>\n\n            </div>\n     \n            <div  style={{width:'99%',height:'315px',float:'left'}}>\n                <Pie />\n            </div>\n         \n        </div>\n\n    \n    \n\n        <div id=\"centerBottom\" style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,marginLeft:'1px',\n                            borderRightColor:'rgba(1,1,1,0.5)',borderBottomColor:'rgba(1,1,1,0.5)'}}>\n            <div className=\"panell-heading\"  style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,\n                            borderBottomColor:'rgba(1,1,1,0.5)',width:'99%'}}>\n                <h3 style={{fontFamily:'微软雅黑',color:\"black\"}}>\n                碳排放消费组成\n                </h3>\n\n            </div>\n            <div   style={{width:'99%',height:'310px'}}>\n                <Bar />\n            </div>\n        </div>\n        {/* <div id=\"rightBottom\" style={{border:'dashed',borderColor:'rgba(0,0,0,0)',borderWidth:2,marginLeft:'1px',\n                            borderBottomColor:'rgba(1,1,1,0.5)'}}>\n\n        </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n  \n\n"],"sourceRoot":""}